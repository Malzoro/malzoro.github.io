<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>uint8_t* blog</title>
    <link>https://blog.i-eat-sponges.ca/</link>
    <description>Recent content on uint8_t* blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Sep 2023 10:47:23 -0400</lastBuildDate><atom:link href="https://blog.i-eat-sponges.ca/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stack String Manipulation</title>
      <link>https://blog.i-eat-sponges.ca/malware/execve_using_stack/</link>
      <pubDate>Fri, 22 Sep 2023 10:47:23 -0400</pubDate>
      
      <guid>https://blog.i-eat-sponges.ca/malware/execve_using_stack/</guid>
      <description>So we&amp;rsquo;ve seen many of the ways we could want to manipulate strings for our shellcode, this time let&amp;rsquo;s use a previous technique to call execve(&amp;quot;/bin/sh&amp;quot;).
Let&amp;rsquo;s write our program.
.intel_syntax noprefix .global _start .section .text _start: mov rbx, 0x0068732f6e69622f push rbx mov rdi, rsp xor eax, eax mov al, 59 syscall We used the string /bin/sh\0 backward, we could also do the following instead.
.intel_syntax noprefix .global _start .section .</description>
      <content>&lt;p&gt;So we&amp;rsquo;ve seen many of the ways we could want to manipulate strings for our shellcode, this time let&amp;rsquo;s use a previous technique to call &lt;code&gt;execve(&amp;quot;/bin/sh&amp;quot;)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s write our program.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-x86asm&#34; data-lang=&#34;x86asm&#34;&gt;.intel_syntax noprefix
.global _start

.section .text

_start:
  mov rbx, 0x0068732f6e69622f
  push rbx
  mov rdi, rsp
  xor eax, eax
  mov al, 59
  syscall
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We used the string &lt;code&gt;/bin/sh\0&lt;/code&gt; backward, we could also do the following instead.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-x86asm&#34; data-lang=&#34;x86asm&#34;&gt;.intel_syntax noprefix
.global _start

.section .text

_start:
  mov rbx, 0x68732f2f6e69622f
  push rbx
  mov rdi, rsp
  xor eax, eax
  mov al, 59
  syscall
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This time we&amp;rsquo;re calling &lt;code&gt;execve&lt;/code&gt; with &lt;code&gt;/bin//sh&lt;/code&gt;, note that we&amp;rsquo;re just trying to make the value fit in 8 bytes, so we added an extra &lt;code&gt;/&lt;/code&gt;, this has no consequences and work just like when not using the extra &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;However please note that since we didn&amp;rsquo;t specify a null-byte at the end of the second program, it might not always work, for example. When i compiled the second program, it was trying to run &lt;code&gt;/bin//sh\1&lt;/code&gt; instead of &lt;code&gt;/bin//sh\0&lt;/code&gt; which was failing.&lt;/p&gt;
&lt;h2 id=&#34;do-we-need-to-exit-when-calling-execve&#34;&gt;Do we need to exit() when calling execve&lt;/h2&gt;
&lt;p&gt;The eagle-eyed may have notice that i did not use the &lt;code&gt;exit()&lt;/code&gt; system call after calling &lt;code&gt;execve&lt;/code&gt;, that&amp;rsquo;s because &lt;code&gt;execve&lt;/code&gt; is wiping the current process data section and memory (stack, heap).&lt;/p&gt;
&lt;p&gt;So calling exit, after a &lt;code&gt;execve&lt;/code&gt; call is not required, matter of fact it&amp;rsquo;s bytes that could be removed from your shellcode.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Exploitation</title>
      <link>https://blog.i-eat-sponges.ca/exploitation/</link>
      <pubDate>Fri, 22 Sep 2023 08:44:48 -0400</pubDate>
      
      <guid>https://blog.i-eat-sponges.ca/exploitation/</guid>
      <description></description>
      <content></content>
    </item>
    
    <item>
      <title>Malware</title>
      <link>https://blog.i-eat-sponges.ca/malware/</link>
      <pubDate>Fri, 22 Sep 2023 08:44:48 -0400</pubDate>
      
      <guid>https://blog.i-eat-sponges.ca/malware/</guid>
      <description></description>
      <content></content>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://blog.i-eat-sponges.ca/home/about/</link>
      <pubDate>Fri, 22 Sep 2023 07:34:37 -0400</pubDate>
      
      <guid>https://blog.i-eat-sponges.ca/home/about/</guid>
      <description>I go online by the name uint8_t*, but you can call me daddy.
I&amp;rsquo;m a 22-year-old Canadian security researcher, proficient in both English and French, I am a student with an insatiable appetite for all things low-level, currently with a focus on :
⚙️ Software Exploitation and Development: I take pleasure in exposing the vulnerabilities concealed within software, bending them to my will. (vulnerability research)
☠️ Malware Analysis: I have descended headfirst into the ominous realm of malware, dissecting its malevolent code to unearth its sinister intentions.</description>
      <content>&lt;p&gt;I go online by the name &lt;strong&gt;uint8_t*&lt;/strong&gt;, but you can call me daddy.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m a 22-year-old Canadian security researcher, proficient in both English and French, I am a student with an insatiable appetite for all things low-level, currently with a focus on :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;⚙️ &lt;strong&gt;Software Exploitation and Development&lt;/strong&gt;: I take pleasure in exposing the vulnerabilities concealed within software, bending them to my will. (vulnerability research)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;☠️ &lt;strong&gt;Malware Analysis&lt;/strong&gt;: I have descended headfirst into the ominous realm of malware, dissecting its malevolent code to unearth its sinister intentions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;⚔️ &lt;strong&gt;Red-Teaming Tactics&lt;/strong&gt;: I have honed my skills in the shadowy art of penetration testing, mastering the techniques of cyber infiltrators to guard against their malevolent schemes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://blog.i-eat-sponges.ca/pepe.gif&#34;  alt=&#34;Hello Friend&#34;  class=&#34;center&#34;    /&gt;


</content>
    </item>
    
    <item>
      <title>Trick</title>
      <link>https://blog.i-eat-sponges.ca/exploitation/trick/</link>
      <pubDate>Fri, 22 Sep 2023 07:16:07 -0400</pubDate>
      
      <guid>https://blog.i-eat-sponges.ca/exploitation/trick/</guid>
      <description>Exploitation Tricks Here&amp;rsquo;s a few exploitation tricks i recently learned.</description>
      <content>&lt;h1 id=&#34;exploitation-tricks&#34;&gt;Exploitation Tricks&lt;/h1&gt;
&lt;p&gt;Here&amp;rsquo;s a few exploitation tricks i recently learned.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://blog.i-eat-sponges.ca/posts/my-first-post/</link>
      <pubDate>Thu, 21 Sep 2023 18:46:00 -0400</pubDate>
      
      <guid>https://blog.i-eat-sponges.ca/posts/my-first-post/</guid>
      <description>welcome to my blog This is my first post and is only a test</description>
      <content>&lt;h1 id=&#34;welcome-to-my-blog&#34;&gt;welcome to my blog&lt;/h1&gt;
&lt;p&gt;This is my first post and is only a test&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
